{"version":3,"file":"static/webpack/static\\development\\pages\\weather.js.1cd4f3b9e40805d53d70.hot-update.js","sources":["webpack:///./pages/weather.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Head from '../components/head'\r\nimport Form from '../components/form'\r\nimport Display from '../components/display'\r\n\r\nconst WeatherApp = () => {\r\n    const [weatherData, setWeather] = useState(null)\r\n    const [country, setCountry] = useState('United States')\r\n    const [err, setErr] = useState(false)\r\n    const [unit, setUnit] = useState('imperial')\r\n\r\n    const hours = (new Date()).getHours()\r\n    const isDayTime = hours > 6 && hours < 20\r\n\r\n    const openWeatherCall = (city) => {\r\n        if(city !== '') {\r\n            fetch(`/openweather/city/${city}/${unit}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if(data.cod == 404) {\r\n                    setErr('City not found')\r\n                } else {\r\n                    setWeather(data)\r\n                }\r\n                //data.name = city name\r\n                //data.sys.country = ISO name\r\n            })\r\n        } else {\r\n            setErr('Please enter a city')\r\n        }\r\n    }\r\n\r\n    const convert = (i) => {\r\n        if(i !== unit && weatherData !== null) {\r\n            if(i === 'metric') {\r\n                setUnit('imperial')\r\n                const newWeather = weatherData\r\n                newWeather.weather.data.main.temp = ((Math.floor(newWeather.weather.data.main.temp) * 9) / 5) + 32\r\n                setWeather(newWeather)\r\n            } else {\r\n                setUnit('metric')\r\n                const newWeather = weather\r\n                newWeather.weather.data.main.temp = ((Math.floor(newWeather.weather.data.main.temp) - 32) * 5) / 9\r\n                setWeather(newWeather)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <Head/>\r\n                <Form getWeatherInfo={(city) => openWeatherCall(city)} error={err} setError={setErr} isDayTime={isDayTime}/>\r\n                <Display data={weatherData} unit={unit} setUnit={(unitChange) => convert(unitChange)} isDayTime={isDayTime}/>\r\n            </div>\r\n            <div style={{textAlign: 'center'}} >Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherApp\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}