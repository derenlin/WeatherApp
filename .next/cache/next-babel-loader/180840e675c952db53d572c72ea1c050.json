{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { isoFlipped, ISO, icons } from '../info';\n\nvar Display = function Display(_ref) {\n  var data = _ref.data,\n      unit = _ref.unit,\n      setUnit = _ref.setUnit,\n      isDayTime = _ref.isDayTime;\n\n  var _useState = useState('United States'),\n      country = _useState[0],\n      setCountry = _useState[1];\n\n  var divStyle = {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: '100vh',\n    width: '50%',\n    minWidth: 500,\n    minHeight: 500,\n    backgroundColor: isDayTime ? '#ffffff' : '#363636',\n    justifyContent: 'center'\n  };\n  var buttonStyle = {\n    letterSpacing: 2,\n    borderStyle: 'none',\n    height: 40,\n    width: 40,\n    fontSize: '1.5rem',\n    outline: 'none',\n    cursor: 'pointer'\n  };\n\n  var countries = _Object$keys(isoFlipped);\n\n  useEffect(function () {\n    if (data !== null && 'sys' in data) {\n      setCountry(ISO[data.sys.country]);\n    }\n  }, [data]);\n\n  var handleCountryChange = function handleCountryChange(e) {\n    // Add callback for parent to change country to zipcode lookup\n    setCountry(e.target.value);\n  };\n\n  console.log(data);\n  var currentWeather;\n\n  if (data !== null) {\n    currentWeather = __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        letterSpacing: 2,\n        fontSize: '2rem',\n        margin: 5\n      }\n    }, data.name, \", \", country), __jsx(\"img\", {\n      style: {\n        width: 150\n      },\n      src: icons[data.weather[0].icon]\n    }), __jsx(\"p\", {\n      style: {\n        letterSpacing: 1,\n        fontSize: '1.5rem',\n        marginTop: 10\n      }\n    }, Math.floor(data.main.temp), __jsx(\"span\", null, \"\\xB0\"), \" \", unit === 'imperial' ? 'F' : 'C'), __jsx(\"p\", {\n      style: {\n        letterSpacing: 1,\n        fontSize: '1.5rem',\n        marginTop: 10\n      }\n    }, data.weather[0].description));\n  }\n\n  return __jsx(\"div\", {\n    style: divStyle\n  }, __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 10,\n      right: 10,\n      height: 50,\n      width: 120,\n      border: '1px solid red',\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-around'\n    }\n  }, __jsx(\"button\", {\n    style: buttonStyle\n  }, \"F\"), __jsx(\"div\", {\n    style: {\n      border: '2px solid black',\n      height: 40,\n      width: 0\n    }\n  }), __jsx(\"button\", {\n    style: _objectSpread({}, buttonStyle, {\n      color: unit != 'imperial' ? '#272343' : '#e3e3e3'\n    })\n  }, \"C\")), currentWeather);\n};\n\nexport default Display;","map":{"version":3,"sources":["C:/Users/deren/Desktop/weather/components/display.js"],"names":["React","useState","useEffect","isoFlipped","ISO","icons","Display","data","unit","setUnit","isDayTime","country","setCountry","divStyle","position","display","flexDirection","alignItems","height","width","minWidth","minHeight","backgroundColor","justifyContent","buttonStyle","letterSpacing","borderStyle","fontSize","outline","cursor","countries","sys","handleCountryChange","e","target","value","console","log","currentWeather","margin","name","weather","icon","marginTop","Math","floor","main","temp","description","top","right","border","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { isoFlipped, ISO, icons } from '../info'\r\n\r\nconst Display = ({data, unit, setUnit, isDayTime}) => {\r\n    const [country, setCountry] = useState('United States')\r\n\r\n    const divStyle = {\r\n        position: 'relative',\r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center',  \r\n        height: '100vh', \r\n        width: '50%', \r\n        minWidth: 500,\r\n        minHeight: 500,\r\n        backgroundColor: isDayTime ? '#ffffff' : '#363636',\r\n        justifyContent: 'center'\r\n    }\r\n\r\n    const buttonStyle = {\r\n        letterSpacing: 2,\r\n        borderStyle: 'none',\r\n        height: 40,\r\n        width: 40,\r\n        fontSize: '1.5rem',\r\n        outline: 'none',\r\n        cursor: 'pointer',\r\n    }\r\n\r\n    const countries = Object.keys(isoFlipped)\r\n\r\n    useEffect(() => {\r\n        if(data !== null && 'sys' in data) {\r\n            setCountry(ISO[data.sys.country])\r\n        }\r\n    }, [data])\r\n\r\n    const handleCountryChange = (e) => {\r\n        // Add callback for parent to change country to zipcode lookup\r\n        setCountry(e.target.value)\r\n    }\r\n    \r\n    console.log(data)\r\n\r\n    let currentWeather \r\n\r\n    if(data !== null) {\r\n        currentWeather = \r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <h1 style={{letterSpacing: 2, fontSize: '2rem', margin: 5}} >{data.name}, {country}</h1>\r\n                <img style={{width: 150}} src={icons[data.weather[0].icon]} />\r\n                <p style={{letterSpacing: 1, fontSize: '1.5rem', marginTop: 10}} >{Math.floor(data.main.temp)}<span>&#176;</span> {unit === 'imperial' ? 'F' : 'C'}</p>\r\n                <p style={{letterSpacing: 1, fontSize: '1.5rem', marginTop: 10}}>{data.weather[0].description}</p>\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div style={divStyle}>\r\n            <div style={{position: 'absolute', top: 10, right: 10, height: 50, width: 120, border: '1px solid red', display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-around'}} >\r\n                <button style={buttonStyle}>F</button>\r\n                <div style={{border: '2px solid black', height: 40, width: 0}}/>\r\n                <button style={{...buttonStyle, color: unit != 'imperial' ? '#272343' : '#e3e3e3'}}>C</button>\r\n            </div>\r\n            {/* <select onChange={(e) => handleCountryChange(e)}  value={country}>\r\n                {countries.map(item => <option key={item} >{item}</option>)}\r\n            </select> */}\r\n            {currentWeather}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Display"]},"metadata":{},"sourceType":"module"}