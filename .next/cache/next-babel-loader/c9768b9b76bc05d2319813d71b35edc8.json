{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { isoFlipped, ISO, icons } from '../info';\n\nvar Display = function Display(_ref) {\n  var data = _ref.data,\n      unit = _ref.unit,\n      setUnit = _ref.setUnit,\n      isDayTime = _ref.isDayTime;\n\n  var _useState = useState('United States'),\n      country = _useState[0],\n      setCountry = _useState[1];\n\n  var divStyle = {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: '100vh',\n    width: '50%',\n    minWidth: 500,\n    minHeight: 500,\n    backgroundColor: isDayTime ? '#ffffff' : '#363636',\n    justifyContent: 'center'\n  };\n\n  var countries = _Object$keys(isoFlipped);\n\n  useEffect(function () {\n    if (data !== null && 'sys' in data) {\n      setCountry(ISO[data.sys.country]);\n    }\n  }, [data]);\n\n  var handleCountryChange = function handleCountryChange(e) {\n    // Add callback for parent to change country to zipcode lookup\n    setCountry(e.target.value);\n  };\n\n  console.log(data);\n  var currentWeather;\n\n  if (data !== null) {\n    currentWeather = __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        letterSpacing: 2,\n        fontSize: '2rem',\n        margin: 5\n      }\n    }, data.name, \", \", country), __jsx(\"img\", {\n      style: {\n        width: 150\n      },\n      src: icons[data.weather[0].icon]\n    }), __jsx(\"p\", {\n      style: {\n        letterSpacing: 1,\n        fontSize: '1.5rem',\n        marginTop: 10\n      }\n    }, Math.floor(data.main.temp), __jsx(\"span\", null, \"\\xB0\"), \" \", unit === 'imperial' ? 'F' : 'C'), __jsx(\"p\", {\n      style: {\n        letterSpacing: 1,\n        fontSize: '1.5rem',\n        marginTop: 10\n      }\n    }, data.weather[0].description));\n  }\n\n  return __jsx(\"div\", {\n    style: divStyle\n  }, __jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 10,\n      right: 10,\n      height: 50,\n      width: 120,\n      border: '1px solid red'\n    }\n  }, __jsx(\"button\", {\n    style: {\n      height: 40,\n      width: 40,\n      fontSize: '1.5rem'\n    }\n  }, \"F\"), __jsx(\"div\", {\n    style: {\n      border: '2px solid black',\n      height: 40\n    }\n  }), __jsx(\"button\", null, \"C\")), currentWeather);\n};\n\nexport default Display;","map":{"version":3,"sources":["C:/Users/deren/Desktop/weather/components/display.js"],"names":["React","useState","useEffect","isoFlipped","ISO","icons","Display","data","unit","setUnit","isDayTime","country","setCountry","divStyle","position","display","flexDirection","alignItems","height","width","minWidth","minHeight","backgroundColor","justifyContent","countries","sys","handleCountryChange","e","target","value","console","log","currentWeather","letterSpacing","fontSize","margin","name","weather","icon","marginTop","Math","floor","main","temp","description","top","right","border"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { isoFlipped, ISO, icons } from '../info'\r\n\r\nconst Display = ({data, unit, setUnit, isDayTime}) => {\r\n    const [country, setCountry] = useState('United States')\r\n\r\n    const divStyle = {\r\n        position: 'relative',\r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center',  \r\n        height: '100vh', \r\n        width: '50%', \r\n        minWidth: 500,\r\n        minHeight: 500,\r\n        backgroundColor: isDayTime ? '#ffffff' : '#363636',\r\n        justifyContent: 'center'\r\n    }\r\n\r\n    const countries = Object.keys(isoFlipped)\r\n\r\n    useEffect(() => {\r\n        if(data !== null && 'sys' in data) {\r\n            setCountry(ISO[data.sys.country])\r\n        }\r\n    }, [data])\r\n\r\n    const handleCountryChange = (e) => {\r\n        // Add callback for parent to change country to zipcode lookup\r\n        setCountry(e.target.value)\r\n    }\r\n    \r\n    console.log(data)\r\n\r\n    let currentWeather \r\n\r\n    if(data !== null) {\r\n        currentWeather = \r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                <h1 style={{letterSpacing: 2, fontSize: '2rem', margin: 5}} >{data.name}, {country}</h1>\r\n                <img style={{width: 150}} src={icons[data.weather[0].icon]} />\r\n                <p style={{letterSpacing: 1, fontSize: '1.5rem', marginTop: 10}} >{Math.floor(data.main.temp)}<span>&#176;</span> {unit === 'imperial' ? 'F' : 'C'}</p>\r\n                <p style={{letterSpacing: 1, fontSize: '1.5rem', marginTop: 10}}>{data.weather[0].description}</p>\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div style={divStyle}>\r\n            <div style={{position: 'absolute', top: 10, right: 10, height: 50, width: 120, border: '1px solid red'}} >\r\n                <button style={{height: 40, width: 40, fontSize: '1.5rem'}}>F</button>\r\n                <div style={{border: '2px solid black', height: 40}}/>\r\n                <button>C</button>\r\n            </div>\r\n            {/* <select onChange={(e) => handleCountryChange(e)}  value={country}>\r\n                {countries.map(item => <option key={item} >{item}</option>)}\r\n            </select> */}\r\n            {currentWeather}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Display"]},"metadata":{},"sourceType":"module"}