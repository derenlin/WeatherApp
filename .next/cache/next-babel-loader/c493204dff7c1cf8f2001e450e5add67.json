{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { isoFlipped, ISO, icons } from '../info';\n\nvar Display = function Display(_ref) {\n  var data = _ref.data,\n      unit = _ref.unit,\n      isDayTime = _ref.isDayTime;\n\n  var _useState = useState('United States'),\n      country = _useState[0],\n      setCountry = _useState[1];\n\n  var divStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: '100vh',\n    width: '50%',\n    minWidth: 500,\n    minHeight: 500,\n    backgroundColor: isDayTime ? '#ffffff' : '#363636',\n    justifyContent: 'center'\n  };\n\n  var countries = _Object$keys(isoFlipped);\n\n  useEffect(function () {\n    if (data !== null && 'sys' in data) {\n      setCountry(ISO[data.sys.country]);\n    }\n  }, [data]);\n\n  var handleCountryChange = function handleCountryChange(e) {\n    // Add callback for parent to change country to zipcode lookup\n    setCountry(e.target.value);\n  };\n\n  console.log(data);\n  var currentWeather;\n\n  if (data !== null) {\n    currentWeather = __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        letterSpacing: 2,\n        fontSize: '2rem',\n        margin: 5\n      }\n    }, data.name, \", \", country), __jsx(\"img\", {\n      style: {\n        width: 150\n      },\n      src: icons[data.weather[0].icon]\n    }), __jsx(\"p\", {\n      style: {\n        letterSpacing: 1,\n        fontSize: '1.5rem',\n        marginTop: 10\n      }\n    }, Math.floor(data.main.temp), __jsx(\"span\", null, \"\\xB0\"), \" \", unit === 'imperial' ? 'Farenheit' : 'Celcius'), __jsx(\"p\", {\n      style: {\n        letterSpacing: 1,\n        fontSize: '1.5rem',\n        marginTop: 10\n      }\n    }, data.weather[0].description));\n  }\n\n  return __jsx(\"div\", {\n    style: divStyle\n  }, currentWeather);\n};\n\nexport default Display;","map":{"version":3,"sources":["C:/Users/deren/Desktop/weather/components/display.js"],"names":["React","useState","useEffect","isoFlipped","ISO","icons","Display","data","unit","isDayTime","country","setCountry","divStyle","display","flexDirection","alignItems","height","width","minWidth","minHeight","backgroundColor","justifyContent","countries","sys","handleCountryChange","e","target","value","console","log","currentWeather","letterSpacing","fontSize","margin","name","weather","icon","marginTop","Math","floor","main","temp","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { isoFlipped, ISO, icons } from '../info'\r\n\r\nconst Display = ({data, unit, isDayTime}) => {\r\n    const [country, setCountry] = useState('United States')\r\n\r\n    const divStyle = {\r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center',  \r\n        height: '100vh', \r\n        width: '50%', \r\n        minWidth: 500,\r\n        minHeight: 500,\r\n        backgroundColor: isDayTime ? '#ffffff' : '#363636',\r\n        justifyContent: 'center'\r\n    }\r\n\r\n    const countries = Object.keys(isoFlipped)\r\n\r\n    useEffect(() => {\r\n        if(data !== null && 'sys' in data) {\r\n            setCountry(ISO[data.sys.country])\r\n        }\r\n    }, [data])\r\n\r\n    const handleCountryChange = (e) => {\r\n        // Add callback for parent to change country to zipcode lookup\r\n        setCountry(e.target.value)\r\n    }\r\n    \r\n    console.log(data)\r\n\r\n    let currentWeather \r\n\r\n    if(data !== null) {\r\n        currentWeather = \r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}>\r\n                <h1 style={{letterSpacing: 2, fontSize: '2rem', margin: 5}} >{data.name}, {country}</h1>\r\n                <img style={{width: 150}} src={icons[data.weather[0].icon]} />\r\n                <p style={{letterSpacing: 1, fontSize: '1.5rem', marginTop: 10}} >{Math.floor(data.main.temp)}<span>&#176;</span> {unit === 'imperial' ? 'Farenheit' : 'Celcius'}</p>\r\n                <p style={{letterSpacing: 1, fontSize: '1.5rem', marginTop: 10}}>{data.weather[0].description}</p>\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div style={divStyle}>\r\n            {/* <select onChange={(e) => handleCountryChange(e)}  value={country}>\r\n                {countries.map(item => <option key={item} >{item}</option>)}\r\n            </select> */}\r\n            {currentWeather}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Display"]},"metadata":{},"sourceType":"module"}