{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { isoFlipped, ISO } from '../info';\n\nconst Display = ({\n  data,\n  unit,\n  isDayTime\n}) => {\n  const {\n    0: country,\n    1: setCountry\n  } = useState('United States');\n  const divStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: '100vh',\n    width: '50%',\n    minWidth: 500,\n    minHeight: 500,\n    backgroundColor: isDayTime ? '#ffffff' : '#363636'\n  };\n\n  const countries = _Object$keys(isoFlipped);\n\n  useEffect(() => {\n    if (data !== null && 'sys' in data) {\n      setCountry(ISO[data.sys.country]);\n    }\n  }, [data]);\n\n  const handleCountryChange = e => {\n    // Add callback for parent to change country to zipcode lookup\n    setCountry(e.target.value);\n  };\n\n  console.log(data);\n  let currentWeather;\n\n  if (data !== null) {\n    currentWeather = __jsx(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        letterSpacing: 2,\n        fontSize: '2rem'\n      }\n    }, data.name, \", \", country), __jsx(\"p\", {\n      style: {\n        letterSpacing: 1,\n        fontSize: '1.5rem',\n        marginTop: 10\n      }\n    }, Math.floor(data.main.temp), __jsx(\"span\", null, \"\\xB0\"), \" \", unit === 'imperial' ? 'Farenheit' : 'Celcius'), __jsx(\"p\", {\n      style: {\n        letterSpacing: 1,\n        fontSize: '1.5rem',\n        marginTop: 10\n      }\n    }, data.weather[0].description), __jsx(\"img\", {\n      src: \"/static/001-rain-3.svg\"\n    }));\n  }\n\n  return __jsx(\"div\", {\n    style: divStyle\n  }, __jsx(\"select\", {\n    onChange: e => handleCountryChange(e),\n    value: country\n  }, countries.map(item => __jsx(\"option\", {\n    key: item\n  }, item))), currentWeather);\n};\n\nexport default Display;","map":{"version":3,"sources":["C:/Users/deren/Desktop/weather/components/display.js"],"names":["React","useState","useEffect","isoFlipped","ISO","Display","data","unit","isDayTime","country","setCountry","divStyle","display","flexDirection","alignItems","height","width","minWidth","minHeight","backgroundColor","countries","sys","handleCountryChange","e","target","value","console","log","currentWeather","justifyContent","letterSpacing","fontSize","name","marginTop","Math","floor","main","temp","weather","description","map","item"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,SAAhC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AACzC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,eAAD,CAAtC;AAEA,QAAMU,QAAQ,GAAG;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,aAAa,EAAE,QAFF;AAGbC,IAAAA,UAAU,EAAE,QAHC;AAIbC,IAAAA,MAAM,EAAE,OAJK;AAKbC,IAAAA,KAAK,EAAE,KALM;AAMbC,IAAAA,QAAQ,EAAE,GANG;AAObC,IAAAA,SAAS,EAAE,GAPE;AAQbC,IAAAA,eAAe,EAAEX,SAAS,GAAG,SAAH,GAAe;AAR5B,GAAjB;;AAWA,QAAMY,SAAS,GAAG,aAAYjB,UAAZ,CAAlB;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,IAAI,KAAK,IAAT,IAAiB,SAASA,IAA7B,EAAmC;AAC/BI,MAAAA,UAAU,CAACN,GAAG,CAACE,IAAI,CAACe,GAAL,CAASZ,OAAV,CAAJ,CAAV;AACH;AACJ,GAJQ,EAIN,CAACH,IAAD,CAJM,CAAT;;AAMA,QAAMgB,mBAAmB,GAAIC,CAAD,IAAO;AAC/B;AACAb,IAAAA,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAHD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AAEA,MAAIsB,cAAJ;;AAEA,MAAGtB,IAAI,KAAK,IAAZ,EAAkB;AACdsB,IAAAA,cAAc,GACV;AAAK,MAAA,KAAK,EAAE;AAAChB,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,aAAa,EAAE,QAAjC;AAA2CC,QAAAA,UAAU,EAAE,QAAvD;AAAiEe,QAAAA,cAAc,EAAE;AAAjF;AAAZ,OACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE,CAAhB;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B;AAAX,OAAmDzB,IAAI,CAAC0B,IAAxD,QAAgEvB,OAAhE,CADJ,EAEI;AAAG,MAAA,KAAK,EAAE;AAACqB,QAAAA,aAAa,EAAE,CAAhB;AAAmBC,QAAAA,QAAQ,EAAE,QAA7B;AAAuCE,QAAAA,SAAS,EAAE;AAAlD;AAAV,OAAmEC,IAAI,CAACC,KAAL,CAAW7B,IAAI,CAAC8B,IAAL,CAAUC,IAArB,CAAnE,EAA8F,2BAA9F,OAAmH9B,IAAI,KAAK,UAAT,GAAsB,WAAtB,GAAoC,SAAvJ,CAFJ,EAGI;AAAG,MAAA,KAAK,EAAE;AAACuB,QAAAA,aAAa,EAAE,CAAhB;AAAmBC,QAAAA,QAAQ,EAAE,QAA7B;AAAuCE,QAAAA,SAAS,EAAE;AAAlD;AAAV,OAAkE3B,IAAI,CAACgC,OAAL,CAAa,CAAb,EAAgBC,WAAlF,CAHJ,EAII;AAAK,MAAA,GAAG,EAAC;AAAT,MAJJ,CADJ;AAOH;;AAED,SACI;AAAK,IAAA,KAAK,EAAE5B;AAAZ,KACI;AAAQ,IAAA,QAAQ,EAAGY,CAAD,IAAOD,mBAAmB,CAACC,CAAD,CAA5C;AAAkD,IAAA,KAAK,EAAEd;AAAzD,KACKW,SAAS,CAACoB,GAAV,CAAcC,IAAI,IAAI;AAAQ,IAAA,GAAG,EAAEA;AAAb,KAAqBA,IAArB,CAAtB,CADL,CADJ,EAIKb,cAJL,CADJ;AASH,CAlDD;;AAoDA,eAAevB,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { isoFlipped, ISO } from '../info'\r\n\r\nconst Display = ({data, unit, isDayTime}) => {\r\n    const [country, setCountry] = useState('United States')\r\n\r\n    const divStyle = {\r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center',  \r\n        height: '100vh', \r\n        width: '50%', \r\n        minWidth: 500,\r\n        minHeight: 500,\r\n        backgroundColor: isDayTime ? '#ffffff' : '#363636'\r\n    }\r\n\r\n    const countries = Object.keys(isoFlipped)\r\n\r\n    useEffect(() => {\r\n        if(data !== null && 'sys' in data) {\r\n            setCountry(ISO[data.sys.country])\r\n        }\r\n    }, [data])\r\n\r\n    const handleCountryChange = (e) => {\r\n        // Add callback for parent to change country to zipcode lookup\r\n        setCountry(e.target.value)\r\n    }\r\n    \r\n    console.log(data)\r\n\r\n    let currentWeather \r\n\r\n    if(data !== null) {\r\n        currentWeather = \r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center'}}>\r\n                <h1 style={{letterSpacing: 2, fontSize: '2rem'}} >{data.name}, {country}</h1>\r\n                <p style={{letterSpacing: 1, fontSize: '1.5rem', marginTop: 10}} >{Math.floor(data.main.temp)}<span>&#176;</span> {unit === 'imperial' ? 'Farenheit' : 'Celcius'}</p>\r\n                <p style={{letterSpacing: 1, fontSize: '1.5rem', marginTop: 10}}>{data.weather[0].description}</p>\r\n                <img src='/static/001-rain-3.svg' />\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div style={divStyle}>\r\n            <select onChange={(e) => handleCountryChange(e)}  value={country}>\r\n                {countries.map(item => <option key={item} >{item}</option>)}\r\n            </select>\r\n            {currentWeather}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Display"]},"metadata":{},"sourceType":"module"}